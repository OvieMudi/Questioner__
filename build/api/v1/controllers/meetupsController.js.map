{"version":3,"sources":["../../../../server/api/v1/controllers/meetupsController.js"],"names":["currentMeetup","db","meetups","MeetupsController","req","res","meetup","Meetups","createMeetup","body","status","json","data","error","message","getMeetups","upcoming","getUpcomingMeetups","getMeetup","params","id","updatedMeetup","updateMeetup","deleted","deleteMeetup","length"],"mappings":"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","sourcesContent":["import Meetups from '../helpers/meetups';\r\nimport db from '../../../db/v1/db';\r\n\r\n// eslint-disable-next-line import/no-mutable-exports\r\nlet currentMeetup = db.meetups[0];\r\n\r\nclass MeetupsController {\r\n  /**\r\n   * Create new meetup in database\r\n   * @param {Object} req - server request\r\n   * @param {Object} res - server response\r\n   * @returns {JSON} - custom server response with error/success\r\n   */\r\n  static postMeetup(req, res) {\r\n    try {\r\n      const meetup = Meetups.createMeetup(req.body);\r\n      currentMeetup = meetup;\r\n      return res.status(201).json({\r\n        status: 201, data: [meetup],\r\n      });\r\n    } catch (error) {\r\n      return res.status(400).json({\r\n        status: 400, error: error.message,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all meetups objects in database\r\n   * @param {Object} req - server request\r\n   * @param {Object} res - server response\r\n   * @returns {JSON} - custom server response with error/success\r\n   */\r\n  static getMeetups(req, res) {\r\n    const meetup = Meetups.getMeetups();\r\n    return res.status(200).json({\r\n      status: 200, data: meetup,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get all upcoming meetups in database\r\n   * @param {Object} req - server request\r\n   * @param {Object} res - server response\r\n   * @returns {JSON} - custom server response with error/success\r\n   */\r\n  static getUpcoming(req, res) {\r\n    const upcoming = Meetups.getUpcomingMeetups();\r\n    return res.status(200).json({\r\n      status: 200, data: upcoming,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get a meetup object in database using a unique id\r\n   * @param {Object} req - server request\r\n   * @param {Object} res - server response\r\n   * @returns {JSON} - custom server response with error/success\r\n   */\r\n  static getMeetup(req, res) {\r\n    const meetup = Meetups.getMeetup(req.params.id);\r\n    if (!meetup) {\r\n      return res.status(404).json({\r\n        status: 404, error: 'meetup does not exist',\r\n      });\r\n    }\r\n    return res.status(200).json({\r\n      status: 200, data: [meetup],\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update a meetup object in database using a unique id\r\n   * @param {Object} req - server request\r\n   * @param {Object} res - server response\r\n   * @returns {JSON} - custom server response with error/success\r\n   */\r\n  static updateMeetup(req, res) {\r\n    try {\r\n      const updatedMeetup = Meetups.updateMeetup(req.params.id, req.body);\r\n      if (!updatedMeetup) {\r\n        return res.status(404).json({\r\n          status: 404, error: 'meetup does not exist',\r\n        });\r\n      }\r\n      currentMeetup = updatedMeetup;\r\n      return res.status(200).json({\r\n        status: 200, data: [updatedMeetup],\r\n      });\r\n    } catch (error) {\r\n      return res.status(400).json({\r\n        status: 400, error: error.message,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delete a meetup object in database using a unique id\r\n   * @param {Object} req - server request\r\n   * @param {Object} res - server response\r\n   * @returns {JSON} - custom server response with error/success\r\n   */\r\n  static deleteMeetup(req, res) {\r\n    const deleted = Meetups.deleteMeetup(req.params.id);\r\n    if (!deleted) {\r\n      return res.status(404).json({\r\n        status: 404, error: 'meetup does not exist',\r\n      });\r\n    }\r\n    currentMeetup = db.meetups[db.meetups.length - 1];\r\n    return res.status(200).json({\r\n      status: 200, message: 'meetup deleted',\r\n    });\r\n  }\r\n}\r\n\r\nexport default MeetupsController;\r\nexport { currentMeetup };\r\n"],"file":"meetupsController.js"}